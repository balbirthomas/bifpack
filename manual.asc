


  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  CCC                                                                 CCC
  CCC      USER MANUAL for the  PROGRAM-PACKAGE    B I F P A C K      CCC
  CCC                                                                 CCC
  CCC      for bifurcation, continuation, and stability analysis      CCC
  CCC                                                                 CCC
  CCC                CURRENT VERSION: 3.3                             CCC
  CCC                LATEST UPDATE: 2 June 1999                       CCC
  CCC                                                                 CCC
  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


    BIFPACK -- a package for Bifurcation, Continuation, and Stability Analysis.
    Copyright (C) 1983, 1999   R. Seydel

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

	(C) Copyright
	for BIFPACK with PACKA*, PACKB*, PACKD, PACKON, 
	    and utilities such as DATAMAN .



  DOCUMENTATION:
  -------------
      1)  GENERAL REFERENCE:
	  R. Seydel: BIFPACK - a program package for
	  continuation, bifurcation and stability analysis.
	  Ulm 1996

      2)  Comment statements in each routine

      3)  Introduction into phenomena and methods can be
	  found 
          a) in the textbook:
	     R.Seydel:  PRACTICAL BIFURCATION AND STABILIY ANALYSIS. 
	     FROM EQUILIBRIUM TO CHAOS.
	     Springer, New York 1994
	     (previous edition published by Elsevier 1988)
          b) in the review paper:
             R.Seydel: Nonlinear Computation.
             Int. J. of Bifurcation and Chaos 7 (1997) 2105-2126
             (A version of this paper is shipped along with BIFPACK.)

  
   DISCLAIMER OF WARRANTY:
   -----------------------
   *   BIFPACK is distributed in the hope that it will be useful, but
   *   WITHOUT ANY WARRANTY. The author does not accept responsibility to 
   *   anyone for the consequences of using BIFPACK or for whether it works
   *   at all. In no event will the author be liable for direct, indirect,
   *   special, incidental, or consequential damages arising out of the use
   *   or inability to use the package or documentation, even if the author
   *   has been advised of the possibility of such damages. The author makes
   *   no warranties, express or implied, that the programs and procedures
   *   are free of error, or are consistent with any particular standard of
   *   merchantability, or that they will meet the user's requirements for
   *   any particular application. They should not be relied on for solving
   *   a problem whose incorrect solution could result in injury to a person
   *   or loss of property.
   *   Use of any programs of BIFPACK constitutes acceptance of the terms
   *   of this disclaimer of warranty.


   REMARKS ON THE IMPLEMENTATION:
   -----------------------------
      1.) The current version of BIFPACK has been tested by the author on
	  workstations (IBM Risc 6000, IBM Fortran), 
	  and on PCs under Microsoft Fortran. 
	  All real variables are in DOUBLE PRECISION.

          Running a combination of all routines under DOS,
          the size of the present version might
          exceed 64K for stack plus data, which may lead to linking problems.
          As one remedy, you may reduce the size of the package by removing
          one or two subroutines, which are not used.
          For example, you may dispense with the direct calculation of
          period doubling (use PACKDPC instead of PACKD, and 
          PACKONPC instead of PACKON).
	   
      2.) In the present version of BIFPACK, the routines have fixed
	  dimensions. If necessary, the dimensions can be easily 
	  changed by editing in the statement  NDIML=14
		      PARAMETER (      NDIML=14)
	  the value of NDIML to the desired size. NDIML must be at 
	  least N+1, and N+2 for periodic solutions. For certain options 
	  related to the calculation of bifurcations, NDIML is required
	  to be 2*N+1, or 2*N+2, or even 3*N+2. 
	  Or, since NDIML needs not be changed in each
	  example, we put it in this way: The maximum possible problem 
	  size N is NDIML-1 , or in case of periodic solutions NDIML-2 
	  or NDIML-3, depending on the chosen option. For a full Hopf-type
	  analysis N can be as large as (NDIML-2)/3 .

	  For   N > 15 , the FORMAT 9300 requires more reals than
	  provided in this version (currently 18 reals in FORMAT 9300
	  allowing for about N.le.16). 

	  Note that the implemented stability algorithms (eigenvalues via
	  QR method) do not recommend large values of  N  because of the
	  costs of handling large matrices.


  M1.  Type of equations to be handled
  ====================================

    1)  systems of nonlinear "algebraic" equations (problem class A)
    ----------------------------------------------                -
    (MODEL='a')

	0 = f(y,PAR) ,  or  0 = f(y,PAR,PARCO)

	y  and  f(y,PAR)  are n-vectors, PAR is a real parameter,
		 PARCO a possible second parameter.

    2)  boundary-value problems of O.D.E. (problem class B)
    ------------------------------------                 -
    (MODEL='b')

	dy/dt = f(t,y,PAR)   or  ...=f(t,y,PAR,PARCO) 

	r(y(a),y(b)) = 0    ,

	PAR  is a real parameter,
	f  and  r  and  y  are n-vectors,
	the independent variable  t  varies in the interval from a to b


    3)  autonomous differential equations (problem class D)
    -------------------------------------                -
    (MODEL='d')

	 dy/dt = f(y,PAR)     or     ...=f(y,PAR,PARCO) 






  M2.  Subroutines to be Supplied by the User
  ===========================================

    M2.1  Subroutines to define the problem
    ----------------------------------------
    These routines are to be collected in file PROBLEM !

       SUBROUTINE SETUP (...) defines several technical items of the
		      problem to be solved: N, a name of the problem, ... 

       SUBROUTINE  FCN (T,Y,F) , defines the vector function F .
		      input:  T (time, dummy argument for algebraic or 
				 autonomous systems),
			      Y (vector of state variables)
		      output: F (value of f(T,Y))

       SUBROUTINE  BC , defines boundary conditions R (in case
			       of ODE boundary-value problems)


	      for some special options also linearizations are to be
	      supplied: in SUBROUTINE FCNLIN (linearization of FCN),
	      and in BCLIN (linearization of BC).


    M2.2  Standard software of numerical analysis:
    ---------------------------------------------

	      a solver for systems of nonlinear equations  
		  (as Newton's method)

	      routines that calculate eigenvalues

	      a solver for boundary-value problems  
		  (we recommend to use multiple shooting. Subroutines that 
		   use multiple shooting will be marked by (*).)

	 (To enable testing of BIFPACK, some standard software is
	 attached. This additional software does NOT belong to BIFPACK.)








 M3.  Routines of BIFPACK
 ========================


   PackA    (branching of algebraic equations)
   -------------------------------------------

      MAINA            typical main program, with IOCONTROL

      CONTA            continuation method

      STASTA           stability analysis of steady-state solutions
		       of ordinary differential equations

      TESTA            calculates a branching test function and
		       an approximation to a solution of the
		       linearization.
		       approximates the solution of the linearization

      SWITA            switching of branches and/or
		       calculation of turning and bifurcation points
		       (includes internal routine FCNLAR);  this routine
		       also allows to trace bifurcation curves.

      LOCATE           carries out a simplified continuation with fixed
                       step length, evaluates test functions, and switches.

      HOPFA            calculation of Hopf bifurcation points
		       (includes internal routine FYHOPF)

      INTERA           interactive work with routines from PACKA

      SETSTART         sets up menu-controlled the file START

      CHECKBUFF        checks the buffer of special solutions

 PackB    (for boundary-value problems of O.D.E.s)
 ------------------------------------------------

      MAINB            typical main program, calls CONTB;
                       with IOCONTROL .

      CONTB            continuation method.
		       For interactive controlling of CONTB see EXB1.

      TESTB (*)        calculates a branching test function and an
		       approximation of the solution of the
		       linearization.

      SWITB (*)        for branch switching and calculation of
		       turning and bifurcation points in
		       boundary-value problems; tracing of bifurcation
		       curves is possible.
		       (includes internal routines  FCNLAR  and  BCLAR)

      PBP              calculation of primary bifurcation points and
		       of an approximation to the "first" emanating
		       solution (from the zero/basic solution), in order
		       to switch to global continuation.
		       Also for linear eigenvalue problems.


 PackD   (for periodic solutions)
 ---------------------------------

      HOPF             calculation of bifurcations.
		       this includes the transition from stationary
		       solutions to periodic solutions. It also
		       calculates the hopf bifurcation point.
		       (includes internal routines  FABZ  and  RABZ)

      DOUBLING         for calculating period doubling
                       (includes internal routines  FABZPD and RABZPD)

      MONOD            subroutine for calculating the monodromy
		       matrix of a periodic solution

      MONOD2 (*)       obtains the monodromy matrix based on the
		       internal data of (multiple) shooting.

      STAPER           checks stability and bifurcation behavior
		       along branches of periodic solutions

      CONTD            continuation with respect to parameter
					    
      MAIND            a generic main program, with IOCONTROL .

      IOCONTROL        controls filenames, and fileunits for input/output

      CHECKPHASE       checks which phase condition f(i)=0 was adopted



 PackON    (for ON-line work at a terminal)
 ------------------------------------------

      BIFLAB           monitors use of various BIFPACK routines for
		       the investigation of autonomous O.D.E.s

   (  INTERA           special BIFLAB-version for handling of algebraic
		       equations only; currently attached to PACKA1  )


 utilities:
 ----------

      CHECKD      checks the linearization

      DATAMAN     data manager, operating on the file
		  DATBASE

   routines that extract data from the file DATBASE / DATBASENEW:

      SUMMARY   creates a summary of results.

      DETAIL    extracts results of a subinterval of the parameter.

      BIFPOINT  outputs all bifurcation points.

      DATEXTRB  extracts from DATBASENEW a file for a bifurcation diagram;
                ready to plot with, for example, gnuplot.
                You may like to edit DATBASENEW before (separate branches).

   routine that extracts data from the file DATIME:

      DATEXTRT  creates a file for plotting a phase plot or time dependence




 M4.  Overview on sub-packages and subroutines
 =============================================
		       

   M4.1   List of Sub-packages and their contents
   ----------------------------------------------

      packA1:   contains CONTA, PRINT, STASTA, INTERA,
			 SETSTART, CHECKBUFF

      mainA :   generic main program to work with packa1

      packA2:   contains TESTA, SWITA

      packA3:   contains HOPFA


      packB1:   contains CONTB

      mainB :   generic main program to work with packb1

      packB2:   contains TESTB, SWITB

      packB3:   contains PBP


      packD :   contains  HOPF, MONOD, MONOD2, STAPER, CONTD

      mainD :   generic main program to work with packD/packON

      packON:   contains BIFLAB

      utilities: (DATAMAN, ...)

  M4.2  List of example programs
  ------------------------------

      EXA1    file PROBLEM, defines
	      Brusselator 3 cells, n=6, see Chapter 2 above
      EXA1m2  main program for bifurcation analysis of EXA1
      EXA3    Lorenz equation, includes main program
      EXB2AM  superconductivity and shooting (needs EXB2F), see Section 3.5

      EXB4    file PROBLEM, defines the two-cells
	      steady-state Brusselator, see Section 3.2
      EXB2F   defines superconductivity, see Section 3.5
      EXB2M   corresponding Main program. 
      EXB13   bending of a beam, see Section 3.7
      EXB1F   file PROBLEM, defines catalyst particle
      EXB1M   related Main program to test a two-parameter
              problem with calculation of bifurcation curves. 

      EXD1    file PROBLEM, defines
	      Brusselator, 2 cells, see Section 4.2
      EXD2    file PROBLEM, defines CSTR (stirred tank reactor)


  M4.3  Attached Software NOT belonging to BIFPACK
  ------------------------------------------------
		 The following subpackages do NOT belong to BIFPACK;
		 they contain standard software of numerical 
		 analysis to be exchanged (if necessary) by other 
		 related software.

   NOLE :    contains a Newton-like method for solving nonlinear
	     system of equations (to be used along with a linear-equation
	     solver);
   linear :  linear-equation sover:
      BGDECO : QR-decomposition of a matrix;
      BGSOLV : solving a linear system of equations.

   eispack:  contains three EISPACK routines for calculating 
		     the eigenvalues of real matrices.

   ode1:     contains methods for solving differential
	     equations. Subroutines are
      ODEBC1 : multiple shooting;
      RKF7   : Runge-Kutta-Fehlberg integrator (nonstiff!);
      SOLVER : interface for solving b.v.p.;
      DATEN  : prepares input for ODEBC1 from initial vector.
       and from BIFPACK:
      CHECKD : checks whether analytic Jacobian is O.K.
			   
   shoot:    contains a shooting device, to be used 
	     along with 'nole'. (Integrator RKF7 is included.)

   M4.4  Frames for easy set-up of examples
   ----------------------------------------
	   
      SETPROB  for setting up the problem defining file PROBLEM.f

      Note that a common statement (supplied in SETPROB) controls several
      options.


 M5.  What sub-package / file is required for which purpose?
 ===========================================================
  
     A1)  for continuation and stability analysis of systems of
	  algebraic equations:
	  MAINA, PROBLEM, PACKA1, NOLE, LINEAR, EISPACK 
	   (example PROBLEM in EXA1)
	   (also possible under D3 with MODUS=7).
		      
     A2)  in addition, a bifurcation analysis:
	  PACKA1, PACKA2, NOLE, LINEAR, EISPACK, 
	  main program in EXA1M2, and example of EXA1
		      
     A3)  calculation of a Hopf bifurcation point by a direct
	  method:
		PACKA3, NOLE, LINEAR, example in EXA3
	  (or see D3)


     A4)  handling the algebraic equation that results from
	  shooting approach of boundary-value problems of O.D.E.s
	  PACKA1, SHOOT, NOLE, LINEAR, (EISPACK,) 
             main and example in EXB2AM and EXB2F 
      
      
      
       
     B1)  boundary-value problems of ODEs: continuation
	  MAINB, PACKB1, ODE1, LINEAR, PROBLEM (example of PROBLEM in EXB4)

     B2)  boundary-value problems of ODEs: bifurcation analysis:
	  PACKB2, ODE1, LINEAR, example and main program in files
	  EXB2M and EXB2F

     B3)  boundary-value problems of ODEs: primary bifurcations:
	  PACKB3, ODE1, LINEAR, example and main program in EXB13

     B4)  boundary-value problems of ODEs: again bifurcation analysis
          as in B2. Here: following bifurcation curves: 
          main in EXB1M, example in EXB1F



     D1)  systems of autonomous ODEs: studying periodic solutions:
	  MAIND, PROBLEM, PACKD, ODE1, LINEAR, EISPACK,   or see D3)

     D2)  systems of autonomous ODEs: only stationary solutions:
	  see A1) or D3)

     D3)  systems of autonomous ODEs: both of D1 and D2:
	  MAIND with IOCONTROL, PROBLEM (example in EXD1 or EXD2),
	  PACKD, ODE1, PACKA1, PACKA2, PACKA3, EISPACK,
	  NOLE, LINEAR, PACKON
          (For running under DOS, see the remark 1. under "Implementation".)


  M6.  Input-Output files
  =======================

   General Overview:
   -----------------
      The unit numbers may be changed in subroutine IOCONTROL,
      the same holds true for filenames.

      Throughout, print output is given to unit UNITLST=11 
          (filename   result.lst ,  or  name.lst in case
          IOCONTROL finds an appropriate shart name provided
          within the string "name1" that is provided by subroutine SETUP) .

      A record of each calculated solution is written to UNITOUT=8
          (filename   result.out ,  or  name.out , respectively).
          This file gives a record of obtained solutions, for
          branching diagrams, may be used for plotting purposes. 
          To use utilities such as the data-manager DATAMAN it makes sense 
          to assemble these files into a general file DATBASE.
          This record make use of FORMATs 9300 , and 9100 , see below.

      In some routines, further output and input uses other
      local files:

        unit1=1  :  file 'options' for storing options.

        unit2=2  :  file 'indfile' that stores the index.

        unit3=3  :  file 'START' for current continuation step (vector)
		 during continuation, may be used for restart.
		 Consists of N+1 or N+2 components, see below in
		 M8 the explanation for Y.

        unit31=31 :  file 'HEAD' to store NOBs and NOSs, and future options.
                     kind of control file in case of low level of interaction.

        unit4=4 : file 'BUFFER' stores specific solutions

   A record to describe the current problem is written via FORMAT 9100,
   a general record for each solution is written via FORMAT 9300-

   Using FORMAT 9100: (A1,2I2,A1,A35,2E20.13) ,
       the following data are written:
       1) label 'P' (to indicate a label that identifies the Problem.
       2) number of branch (NOB)
       3) dimension of parameter vector (NPAR)
       4) index indicating the type of MODEL / solution method (see below)
       5) a text to name the problem
       6) in case of boundary-value problems: left and right end of interval

   Using FORMAT 9300: (A1,I2,I4,2I2,A1,A2,18E20.13) ,
       the following data are written to each record 
           (same format as data in DATBASE):
       1) label 'R'  (for record of solution data)
          label 'r'  (for data obtained by interpolation)
          label '-'  (other data, less trustworthy)
       2) number of branch (NOB)
       3) number of current solution (NOS),
       4) dimension of state vector (N=n)
       5) dimension of parameter vector (NPAR)
       6) index indicating the type of MODEL / solution method:
        a: stationary solution of ODEs
        d: initial vector of autonomous ODEs
        b: initial vector of general ODEs/ boundary-value problems
       7) a text that describes a JUDGEment on the type of solution
          (FORMAT A2) The following letters occur:
          P  : Periodic
          S  : Stable
          U  : Unstable
          B  : Branch point (bifurcation point)
          T  : Turning point
          D  : period Doubling
          E  : Emenating solution
          H  : Hopf bifurcation
            (see remarks below)
       8) field for state vector  Y(1),...,Y(N)
       9) field for parameters    P(1),...,P(NPAR)
      10) only in case of periodic solutions:   the period.


  M7.  Fail exits
  ===============
     For the solver of nonlinear equations (Newton's method or 
     similar) we use the following meaning of a flag in the 
     calling sequence that is mostly called J :
	J=-1 : termination after ITMAX iterations 
	J=-2 : no convergence: damping coefficient too small
	J=-3 : the function can not be evaluated (This may happen,
	       for instance, in a shooting application when the integrator 
	       runs into a singularity.) In order to signal this situation
	       to the solver, SHOOT uses the COMMON statement /FFAIL/ IFLAG .
	J=-4 : matrix singular
      J.GT.0 : number of required iterations upon
	       successful termination.


  M8.  Frequently used variables (in alphabetical order)
  ==============================

     DUMMY      a variable not required for the method, but only to
		match calling sequences of different subroutines.

     EPMACH     relative machine precision on the computer that
		is used for the calculations.

     ETA, ETACO   see documentation.

     EPS        required accuracy, mostly relative .
		EPS=1.E-4  means an accuracy of 4 decimals.
		Feel free to choose more stringent values.

     EPSONE     accuracy for one multiplier of the monodromy matrix
		to match the exact value =1. Choosing a large value
		(in PACKON, for example) may save a lot of computing time.

     F          vector of N scalar componets of  f(t,PAR).

     INDEX      specific index , =k = K = KCO .
		chooses a parameterization of a branch with
		respect to Y(K).

     IND2CO     a second index for a specific auxiliary equation.
		see: ZETACO

     INTERACT   controls the level of interaction / automatization 

     ITAIM      for step length control in continuation:
		number of ITerations at which the algorithm AIMs.
		The step lengths are chosen such that IT approx.= ITAIM.
		A reasonable value depends on your choice of EPS.
		The following table gives hints on the choice:

		EPS          ITAIM for           ITAIM for NOLE
		tolerance    shooting in PACKD   used in PACKA
		------------------------------------------------
		10**(-4)          4                  3
		10**(-6)          6                  4


     JACOBI     indicates whether the linearization of f with
		respect to y is implemented in routine FCNLIN.

     K, KCO     see: INDEX

     M          number of nodes in shooting applications

     MODEL      indicates the type of problem:
		='a'  :  algebraic systems of eqs.
		='d'  :  periodic sols. of autonomous systems of ODEs
		='b'  :  two-point boundary-value problems of ODEs

     MODUS      modus / option / choice

     N , NCO    state dimension, 
		number of equations without auxiliary equations,
		number of components Y(1),...,Y(n) without
		parameter PAR.

     N1, N1CO   =N+1 .      (NP1 in packA2, packB2, packB3)
		often the number of equations actually solved for
		BIFPACK. The internal vectors Y carry the
		parameter PAR in position N1.

     N2, N2CO   =N+2 .
		with periodic solutions / PACKD the number of
		actually solved scalar equations. Internal
		vectors Y carry the period PERIOD in position N2.

     NDIM       dimension .ge. n

     NDIML      dimension of most arrays and vectors in BIFPACK.
		For some vectors or arrays smaller values are
		possible (NDIM=n); this is not done here to make
		changes easier.

     NL         large dimension, usually larger than 2*N.

     NOB        number of branch

     NOS        number of solution

     NPAR       number of parameters for DATAMAN. BIFPACK: =1

     NDIMBUFF   dimension of datafield for storing the buffer
		of special solutions; currently =5

     NSECFLAG   user supplied (in SETPROB..) flag that indicates whether
		a second parameter PARCO can be modified.
		=1 if yes,  =0  if no second parameter PARCO is defined.

     PAR        stands for the branching parameter.

     PARCO      contains value of a second parameter in case NSECFLAG=1

     PERIOD     is the period of a periodic solution.

     R          vector of N scalar boundary conditions.
		       
     RKF7       Runge-Kutta-Fehlberg integrator of order 7

     S          in CONTA, CONTB: step length.
		      
     STEPMA     maximum step length allowed (measured along
		predictor)
		      
     STEPMI     minimum step length.

     T          independent variable, time or space variable.
		vector T(1),...,T(M) in context of shooting.  For two-point 
		boundary-valued problems, T(1) is the left end of the
		integration interval, T(M) the right end.
		      
     TDUMMY     dummy variable

     WINDOW     range of admissable parameter values of bifurcation par.:
		WINDOW(1) .le. PAR .le. WINDOW(2)

     X          in HOPF: solution vector of a stationary solution
		       
     Y          vector that includes the N components of  y ,
		the parameter PAR as the (n+1)-st component, and
		sometimes even more components:
		in case of periodic solutions: Y(N+2)= period ,
		in case of the use of test functions in PACKA2
		and PACKB2 the vector  h  of the linearization.

     UNITj      UNIT number to address input/output  (may be changed 
                in subroutine IOCONTROL).

     ZETACO     for symmetry braking, a general auxiliary boundary
		conditions is of interest:
		Y(KCO) - ZETACO * Y(IND2CO)  =  ETACO






  Most of the above variables normally need not be changed.

  The amount of computing time critically depends on the values of
  EPS,  EPSONE,  ITAIM.

  For some problems (such as stiff equations) an ODE integrator 
  more appropriate than RKF7 should be used.

  A practical hint:
     Before starting a new problem you should start with purging the files
     START, and BUFFER.
     They may contain "old" data of your previous problem not matching
     your new problem.


============================================================================
